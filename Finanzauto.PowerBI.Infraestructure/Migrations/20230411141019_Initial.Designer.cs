// <auto-generated />
using System;
using Finanzauto.PowerBI.Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finanzauto.PowerBI.Infraestructure.Migrations
{
    [DbContext(typeof(PowerBIDbContext))]
    [Migration("20230411141019_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.ChildReport", b =>
                {
                    b.Property<int>("chId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("chId"));

                    b.Property<string>("chiDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<int>("parId")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("chId");

                    b.HasIndex("parId");

                    b.ToTable("ChildReports", (string)null);

                    b.HasData(
                        new
                        {
                            chId = 1,
                            chiDescription = "Reporte Estratégico # 1",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ9",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6233),
                            createUser = 2140,
                            parId = 1,
                            state = true
                        },
                        new
                        {
                            chId = 2,
                            chiDescription = "Reporte Estratégico # 2 ",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ10",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6235),
                            createUser = 2140,
                            parId = 1,
                            state = true
                        },
                        new
                        {
                            chId = 3,
                            chiDescription = "Reporte Estratégico # 3",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ11",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6236),
                            createUser = 2140,
                            parId = 1,
                            state = true
                        },
                        new
                        {
                            chId = 4,
                            chiDescription = "Reporte Táctico # 1",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ12",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6238),
                            createUser = 2140,
                            parId = 2,
                            state = true
                        },
                        new
                        {
                            chId = 5,
                            chiDescription = "Reporte Táctico # 2",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ13",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6239),
                            createUser = 2140,
                            parId = 2,
                            state = true
                        },
                        new
                        {
                            chId = 6,
                            chiDescription = "Reporte Táctico # 3",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ14",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6242),
                            createUser = 2140,
                            parId = 2,
                            state = true
                        },
                        new
                        {
                            chId = 7,
                            chiDescription = "Reporte Operativo # 1",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ15\r\n",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6243),
                            createUser = 2140,
                            parId = 3,
                            state = true
                        },
                        new
                        {
                            chId = 8,
                            chiDescription = "Reporte Operativo # 2",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ16\r\n",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6244),
                            createUser = 2140,
                            parId = 3,
                            state = true
                        },
                        new
                        {
                            chId = 9,
                            chiDescription = "Reporte Táctico # 3",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ17\r\n",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6245),
                            createUser = 2140,
                            parId = 3,
                            state = true
                        },
                        new
                        {
                            chId = 10,
                            chiDescription = "Gestión de Permisos",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ18\r\n",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6247),
                            createUser = 2140,
                            parId = 4,
                            state = true
                        },
                        new
                        {
                            chId = 11,
                            chiDescription = "Gestión de Reportes",
                            chiUrl = "https://app.powerbi.com/view?r=eyJrIjoiZjIwZmUxYWYtOTc0Zi00OTExLWEyNzAtZTIwYmQyNDAzNjg4IiwidCI6IjhlZGRjOTE5LTMxNzEtNDYwZC04NGE0LWIzMGFlNjVlMzdjMyJ19\r\n",
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6248),
                            createUser = 2140,
                            parId = 4,
                            state = true
                        });
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Log", b =>
                {
                    b.Property<int>("logId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("logId"));

                    b.Property<int>("chId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("logLastConnection")
                        .HasColumnType("datetime2");

                    b.Property<int>("logPrintTimes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("logId");

                    b.HasIndex("chId");

                    b.HasIndex("usrId");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Login", b =>
                {
                    b.Property<int>("lgnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lgnId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<int>("lgnConnectionTimes")
                        .HasColumnType("int");

                    b.Property<string>("lgnIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lgnLastConnection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("lgnId");

                    b.HasIndex("usrId");

                    b.ToTable("Logins", (string)null);

                    b.HasData(
                        new
                        {
                            lgnId = 1,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6252),
                            createUser = 4,
                            lgnConnectionTimes = 10,
                            lgnIp = "123.12.36.52",
                            lgnLastConnection = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6251),
                            state = true,
                            usrId = 1
                        },
                        new
                        {
                            lgnId = 2,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6254),
                            createUser = 4,
                            lgnConnectionTimes = 10,
                            lgnIp = "123.12.36.2",
                            lgnLastConnection = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6254),
                            state = true,
                            usrId = 1
                        });
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.ParentReport", b =>
                {
                    b.Property<int>("parId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("parId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<string>("parDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("parId");

                    b.ToTable("ParentReports", (string)null);

                    b.HasData(
                        new
                        {
                            parId = 1,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6220),
                            createUser = 4,
                            parDescription = "Reportes Estratégicos",
                            parIcon = "strategic",
                            state = true
                        },
                        new
                        {
                            parId = 2,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6223),
                            createUser = 2140,
                            parDescription = "Reportes Tácticos",
                            parIcon = "tactical",
                            state = true
                        },
                        new
                        {
                            parId = 3,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6224),
                            createUser = 2140,
                            parDescription = "Reportes Operacionales",
                            parIcon = "operative",
                            state = true
                        },
                        new
                        {
                            parId = 4,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6225),
                            createUser = 2140,
                            parDescription = "Reportes Administrador",
                            parIcon = "administrador",
                            state = true
                        });
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Permission", b =>
                {
                    b.Property<int>("perId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("perId"));

                    b.Property<int>("chilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("perId");

                    b.HasIndex("chilId");

                    b.HasIndex("usrId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Rol", b =>
                {
                    b.Property<int>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<string>("rolDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("rolId");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            rolId = 1,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6126),
                            createUser = 1,
                            rolDescription = "Administrador",
                            state = true
                        },
                        new
                        {
                            rolId = 2,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6152),
                            createUser = 1,
                            rolDescription = "Operativo",
                            state = true
                        },
                        new
                        {
                            rolId = 3,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6153),
                            createUser = 1,
                            rolDescription = "Estrategico",
                            state = true
                        },
                        new
                        {
                            rolId = 4,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6154),
                            createUser = 1,
                            rolDescription = "Supervisor",
                            state = true
                        },
                        new
                        {
                            rolId = 5,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6156),
                            createUser = 1,
                            rolDescription = "Default",
                            state = true
                        });
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Tokens", b =>
                {
                    b.Property<int>("tknId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tknId"));

                    b.Property<int>("CodigoMensaje")
                        .HasColumnType("int");

                    b.Property<string>("DescMensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<bool>("tknIsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("tknRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tknToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("tknId");

                    b.HasIndex("usrId");

                    b.ToTable("Tokens", (string)null);
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.User", b =>
                {
                    b.Property<int>("usrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usrId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("createUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifyUser")
                        .HasColumnType("int");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("usrDomainName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usrId");

                    b.HasIndex("rolId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            usrId = 1,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6211),
                            createUser = 1,
                            rolId = 1,
                            state = true,
                            usrDomainName = "efrain.guzman",
                            usrEmail = "efrain.guzman@finanzauto.com.co",
                            usrLastName = "Guzman",
                            usrName = "Efrain"
                        },
                        new
                        {
                            usrId = 2,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6214),
                            createUser = 1,
                            rolId = 1,
                            state = true,
                            usrDomainName = "hector.cruz",
                            usrEmail = "hector.cruz@finanzauto.com.co",
                            usrLastName = "Cruz",
                            usrName = "Hector"
                        },
                        new
                        {
                            usrId = 3,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6215),
                            createUser = 1,
                            rolId = 1,
                            state = true,
                            usrDomainName = "cristian.vargas",
                            usrEmail = "cristian.vargas@finanzauto.com.co",
                            usrLastName = "Vargas",
                            usrName = "Cristian"
                        },
                        new
                        {
                            usrId = 4,
                            createDate = new DateTime(2023, 4, 11, 9, 10, 18, 922, DateTimeKind.Local).AddTicks(6217),
                            createUser = 1,
                            rolId = 1,
                            state = true,
                            usrDomainName = "julian.bojaca",
                            usrEmail = "julian.bojaca@finanzauto.com.co",
                            usrLastName = "Bojaca",
                            usrName = "Julian"
                        });
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.ChildReport", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.ParentReport", "ParentReport")
                        .WithMany("GetChildReports")
                        .HasForeignKey("parId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentReport");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Log", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.ChildReport", "ChildReport")
                        .WithMany("GetLogs")
                        .HasForeignKey("chId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finanzauto.PowerBI.Domain.User", "User")
                        .WithMany("GetLogs")
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildReport");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Login", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.User", "User")
                        .WithMany("GetLogins")
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Permission", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.ChildReport", "ChildReport")
                        .WithMany("GetPermissions")
                        .HasForeignKey("chilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finanzauto.PowerBI.Domain.User", "User")
                        .WithMany("GetPermissions")
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildReport");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Tokens", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.User", b =>
                {
                    b.HasOne("Finanzauto.PowerBI.Domain.Rol", "Rol")
                        .WithMany("GetUsers")
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.ChildReport", b =>
                {
                    b.Navigation("GetLogs");

                    b.Navigation("GetPermissions");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.ParentReport", b =>
                {
                    b.Navigation("GetChildReports");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.Rol", b =>
                {
                    b.Navigation("GetUsers");
                });

            modelBuilder.Entity("Finanzauto.PowerBI.Domain.User", b =>
                {
                    b.Navigation("GetLogins");

                    b.Navigation("GetLogs");

                    b.Navigation("GetPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
